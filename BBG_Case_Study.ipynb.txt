{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# 1.0 Loading and Preparation of Data"
      ],
      "metadata": {
        "id": "Y59kyleHkZBb"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 1.1 Import Libraries"
      ],
      "metadata": {
        "id": "Lcg2WYPUkct_"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "bgd_5UChPSPL"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import os\n",
        "import json\n",
        "# importing the requests library\n",
        "import requests\n",
        "# importing the google sheet library\n",
        "import gspread\n",
        "from gspread_dataframe import set_with_dataframe\n",
        "from google.oauth2.service_account import Credentials\n",
        "from pydrive.auth import GoogleAuth\n",
        "from pydrive.drive import GoogleDrive"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 1.2 Loading Dataset and Doing Initial Analysis\n",
        "\n",
        "We have 3 datasets contain following information.\n",
        "\n",
        "1. A CSV file containing a shop mapping.\n",
        "2. An Excel file containing orders (revenue) on date per web shop and category \n",
        "between February 15 - March 15, 2022.\n",
        "3. An Excel file containing cost data (advertising) on date per shop between \n",
        "February 15 - March 15, 2022."
      ],
      "metadata": {
        "id": "JKBY31sDknrH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_cost_log = pd.read_excel(\"/content/Cost-Data.xlsx\");\n",
        "df_content_log = pd.read_csv(\"/content/IDs.csv\",sep=\";\");\n",
        "df_order_db = pd.read_excel(\"/content/Order-Data.xlsx\");"
      ],
      "metadata": {
        "id": "LkW6yud2QHDm"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "##checing loaded dataframe\n",
        "df_cost_log"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "c2uvJVXAQv30",
        "outputId": "99a6d113-189d-4931-d7fa-ef5cca37df30"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          date      shop_id  advertising_costs (local currency)\n",
              "0   2022-02-15  12345678915                           84.500000\n",
              "1   2022-02-15  12345678914                         2253.188950\n",
              "2   2022-02-15  12345678911                        17028.923715\n",
              "3   2022-02-15  12345678912                          107.250000\n",
              "4   2022-02-15  12345678913                           87.820000\n",
              "..         ...          ...                                 ...\n",
              "169 2022-03-15  12345678912                           72.400000\n",
              "170 2022-03-15  12345678913                           86.800000\n",
              "171 2022-03-15  12345678914                         3204.776497\n",
              "172 2022-03-15  12345678910                         1523.790000\n",
              "173 2022-03-15  12345678915                           61.920000\n",
              "\n",
              "[174 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6a6ca393-56cd-431e-9995-a430846a80da\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>shop_id</th>\n",
              "      <th>advertising_costs (local currency)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>84.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678914</td>\n",
              "      <td>2253.188950</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678911</td>\n",
              "      <td>17028.923715</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678912</td>\n",
              "      <td>107.250000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678913</td>\n",
              "      <td>87.820000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>169</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678912</td>\n",
              "      <td>72.400000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>170</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678913</td>\n",
              "      <td>86.800000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>171</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678914</td>\n",
              "      <td>3204.776497</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>172</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>1523.790000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>173</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>61.920000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>174 rows Ã— 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6a6ca393-56cd-431e-9995-a430846a80da')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6a6ca393-56cd-431e-9995-a430846a80da button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6a6ca393-56cd-431e-9995-a430846a80da');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#getting null values\n",
        "df_cost_log.isnull().mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c5_mKM8wCULV",
        "outputId": "5f9f011d-367b-4987-94c0-88925587d7e8"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "date                                  0.0\n",
              "shop_id                               0.0\n",
              "advertising_costs (local currency)    0.0\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "We have observed that there is no null values in the dataframe."
      ],
      "metadata": {
        "id": "a8l1LxPslF8o"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#checing loaded dataframe\n",
        "df_content_log"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "id": "fBx6DgL0Q03d",
        "outputId": "4bedc727-8cd6-437d-b48d-67be596ec2b9"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            ID Shop   Name   Local Currency Abbreviation\n",
              "0  12345678910  Blumfeldt DE                         EUR\n",
              "1  12345678911  Blumfeldt HU                         HUF\n",
              "2  12345678912  Blumfeldt FR                         EUR\n",
              "3  12345678913  Blumfeldt IT                         EUR\n",
              "4  12345678914  Blumfeldt CZ                         CZK\n",
              "5  12345678915  Blumfeldt Uk                         GBP"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ee9a52d5-a412-45de-abc2-c95fed59060d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>Shop   Name</th>\n",
              "      <th>Local Currency Abbreviation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>12345678910</td>\n",
              "      <td>Blumfeldt DE</td>\n",
              "      <td>EUR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>12345678911</td>\n",
              "      <td>Blumfeldt HU</td>\n",
              "      <td>HUF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>12345678912</td>\n",
              "      <td>Blumfeldt FR</td>\n",
              "      <td>EUR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>12345678913</td>\n",
              "      <td>Blumfeldt IT</td>\n",
              "      <td>EUR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>12345678914</td>\n",
              "      <td>Blumfeldt CZ</td>\n",
              "      <td>CZK</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>12345678915</td>\n",
              "      <td>Blumfeldt Uk</td>\n",
              "      <td>GBP</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee9a52d5-a412-45de-abc2-c95fed59060d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ee9a52d5-a412-45de-abc2-c95fed59060d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ee9a52d5-a412-45de-abc2-c95fed59060d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#getting null values\n",
        "df_content_log.isnull().mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pPY_TdZdCW9l",
        "outputId": "e7adef0d-1f93-4550-f3ce-720b17aa11f1"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ID                             0.0\n",
              "Shop   Name                    0.0\n",
              "Local Currency Abbreviation    0.0\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "We have observed that there is no null values in the dataframe."
      ],
      "metadata": {
        "id": "wspsCIRTlRKQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#getting null values\n",
        "df_order_db.isnull().mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PSs9O11bCaal",
        "outputId": "593f7693-3767-47e4-cd45-97a109c887c4"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "order_date                           0.000000\n",
              "year                                 0.000000\n",
              "month                                0.000000\n",
              "day                                  0.000000\n",
              "shop_id                              0.000000\n",
              "customer_id                          0.000000\n",
              "product_category                     0.003261\n",
              "revenue_before_discount (in euro)    0.000000\n",
              "discount                             0.000000\n",
              "discount_currency                    0.000000\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "We have observed in order dataset the column \"product_category\" have null values seems some data is missing. So, we are goinmg to replace it with **Unknown** category."
      ],
      "metadata": {
        "id": "U1yLLyNwlZCg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#replacing null category with Unknown\n",
        "df_order_db['product_category'] = df_order_db['product_category'].replace(np.nan, 'Unknown')"
      ],
      "metadata": {
        "id": "rQg4ZFB9C-sW"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#getting null values\n",
        "df_order_db.isnull().mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lvwCJRlwCqdO",
        "outputId": "e2a80da5-027d-48d6-d6e6-c6d8509f1621"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "order_date                           0.0\n",
              "year                                 0.0\n",
              "month                                0.0\n",
              "day                                  0.0\n",
              "shop_id                              0.0\n",
              "customer_id                          0.0\n",
              "product_category                     0.0\n",
              "revenue_before_discount (in euro)    0.0\n",
              "discount                             0.0\n",
              "discount_currency                    0.0\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 1.3 Identifying unwanted Values and Removing Them (Data integrity)"
      ],
      "metadata": {
        "id": "tBP3E42dpNiK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#getting unique values \n",
        "df_order_db.discount_currency.unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KtYNnGpxREQM",
        "outputId": "1f5c4c9b-d57c-4920-d967-45e195a7ea25"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['EUR', 'EUR ', 'EU R', 'EUR_', ' EUR', 'eur', 'euro', '_EUR',\n",
              "       'LOCAL', 'local'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "We also observed that in order dataset the column \"discount currency\" have some incorrect values so, we have to fix it keep things symmetrical."
      ],
      "metadata": {
        "id": "aP6Fk6jDmOCl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#removing sapces fromthe column\n",
        "df_order_db['discount_currency'] = df_order_db['discount_currency'].str.replace(\" \", \"\")\n",
        "#keeping all characters are in upper case\n",
        "df_order_db['discount_currency'] = df_order_db['discount_currency'].str.upper()\n",
        "#removing \"_\" from the feild\n",
        "df_order_db['discount_currency'] = df_order_db['discount_currency'].str.replace(\"_\", \"\")\n",
        "#replacing \"EURO\" with \"EUR\"\n",
        "df_order_db['discount_currency'] = df_order_db['discount_currency'].str.replace(\"EURO\", \"EUR\")"
      ],
      "metadata": {
        "id": "cYb7XNhMSdUL"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#getting unique values after changes\n",
        "df_order_db.discount_currency.unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z4onM1qeSxxW",
        "outputId": "016d3433-de73-4391-c375-b9104dc38a69"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['EUR', 'LOCAL'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 2.1 Data Aggregation"
      ],
      "metadata": {
        "id": "IayE3xNotLg5"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Merge Cost Data with content Data to get shopewise currency information.  "
      ],
      "metadata": {
        "id": "DCIP9rgZ1XlZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#merge Cost Data with content Data\n",
        "final_content_oreder = df_cost_log.merge(df_content_log, left_on='shop_id', right_on='ID', how='left')"
      ],
      "metadata": {
        "id": "uItnNs-uZVgV"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "final_content_oreder"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "WWOoFXIUZvsV",
        "outputId": "1a59c14a-8e61-4e9f-c9f8-8172f8df9ce0"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          date      shop_id  advertising_costs (local currency)           ID  \\\n",
              "0   2022-02-15  12345678915                           84.500000  12345678915   \n",
              "1   2022-02-15  12345678914                         2253.188950  12345678914   \n",
              "2   2022-02-15  12345678911                        17028.923715  12345678911   \n",
              "3   2022-02-15  12345678912                          107.250000  12345678912   \n",
              "4   2022-02-15  12345678913                           87.820000  12345678913   \n",
              "..         ...          ...                                 ...          ...   \n",
              "169 2022-03-15  12345678912                           72.400000  12345678912   \n",
              "170 2022-03-15  12345678913                           86.800000  12345678913   \n",
              "171 2022-03-15  12345678914                         3204.776497  12345678914   \n",
              "172 2022-03-15  12345678910                         1523.790000  12345678910   \n",
              "173 2022-03-15  12345678915                           61.920000  12345678915   \n",
              "\n",
              "    Shop   Name   Local Currency Abbreviation  \n",
              "0    Blumfeldt Uk                         GBP  \n",
              "1    Blumfeldt CZ                         CZK  \n",
              "2    Blumfeldt HU                         HUF  \n",
              "3    Blumfeldt FR                         EUR  \n",
              "4    Blumfeldt IT                         EUR  \n",
              "..            ...                         ...  \n",
              "169  Blumfeldt FR                         EUR  \n",
              "170  Blumfeldt IT                         EUR  \n",
              "171  Blumfeldt CZ                         CZK  \n",
              "172  Blumfeldt DE                         EUR  \n",
              "173  Blumfeldt Uk                         GBP  \n",
              "\n",
              "[174 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4e1d7d61-d2e5-4434-8de4-eb8c66a9ba88\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>shop_id</th>\n",
              "      <th>advertising_costs (local currency)</th>\n",
              "      <th>ID</th>\n",
              "      <th>Shop   Name</th>\n",
              "      <th>Local Currency Abbreviation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>84.500000</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>Blumfeldt Uk</td>\n",
              "      <td>GBP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678914</td>\n",
              "      <td>2253.188950</td>\n",
              "      <td>12345678914</td>\n",
              "      <td>Blumfeldt CZ</td>\n",
              "      <td>CZK</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678911</td>\n",
              "      <td>17028.923715</td>\n",
              "      <td>12345678911</td>\n",
              "      <td>Blumfeldt HU</td>\n",
              "      <td>HUF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678912</td>\n",
              "      <td>107.250000</td>\n",
              "      <td>12345678912</td>\n",
              "      <td>Blumfeldt FR</td>\n",
              "      <td>EUR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678913</td>\n",
              "      <td>87.820000</td>\n",
              "      <td>12345678913</td>\n",
              "      <td>Blumfeldt IT</td>\n",
              "      <td>EUR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>169</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678912</td>\n",
              "      <td>72.400000</td>\n",
              "      <td>12345678912</td>\n",
              "      <td>Blumfeldt FR</td>\n",
              "      <td>EUR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>170</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678913</td>\n",
              "      <td>86.800000</td>\n",
              "      <td>12345678913</td>\n",
              "      <td>Blumfeldt IT</td>\n",
              "      <td>EUR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>171</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678914</td>\n",
              "      <td>3204.776497</td>\n",
              "      <td>12345678914</td>\n",
              "      <td>Blumfeldt CZ</td>\n",
              "      <td>CZK</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>172</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>1523.790000</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>Blumfeldt DE</td>\n",
              "      <td>EUR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>173</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>61.920000</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>Blumfeldt Uk</td>\n",
              "      <td>GBP</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>174 rows Ã— 6 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e1d7d61-d2e5-4434-8de4-eb8c66a9ba88')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4e1d7d61-d2e5-4434-8de4-eb8c66a9ba88 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4e1d7d61-d2e5-4434-8de4-eb8c66a9ba88');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 2.2 Exchange API call"
      ],
      "metadata": {
        "id": "ZiYUfyap1IMC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "  \n",
        "# api-endpoint\n",
        "URL = \"https://v6.exchangerate-api.com/v6/5625f0ce9638cb7b76c4dff0/latest/EUR\"\n",
        "\n",
        "#error handling\n",
        "try:\n",
        "    # sending get request and saving the response as response object\n",
        "    r = requests.get(url = URL)\n",
        "    r.raise_for_status()\n",
        "except requests.exceptions.RequestException as err:\n",
        "    print(\"OOps: Something Else\",err)\n",
        "except requests.exceptions.HTTPError as errh:\n",
        "    print(\"Http Error:\",errh)\n",
        "except requests.exceptions.ConnectionError as errc:\n",
        "    print(\"Error Connecting:\",errc)\n",
        "except requests.exceptions.Timeout as errt:\n",
        "    print(\"Timeout Error:\",errt)    \n",
        "\n",
        "\n",
        "# extracting data in json format\n",
        "j = r.json()\n",
        "#creating dataframe\n",
        "data = pd.DataFrame.from_dict(j)\n",
        "\n",
        "#making index as a new column\n",
        "data.reset_index(inplace=True)\n",
        "\n",
        "#rename column name\n",
        "data = data.rename(columns = {'index':'currency'})\n",
        "data"
      ],
      "metadata": {
        "id": "uxjfSEKYcBRT",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 661
        },
        "outputId": "7714d796-aeb6-422a-8440-14d32818a47e"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    currency   result                          documentation  \\\n",
              "0        AED  success  https://www.exchangerate-api.com/docs   \n",
              "1        AFN  success  https://www.exchangerate-api.com/docs   \n",
              "2        ALL  success  https://www.exchangerate-api.com/docs   \n",
              "3        AMD  success  https://www.exchangerate-api.com/docs   \n",
              "4        ANG  success  https://www.exchangerate-api.com/docs   \n",
              "..       ...      ...                                    ...   \n",
              "157      XPF  success  https://www.exchangerate-api.com/docs   \n",
              "158      YER  success  https://www.exchangerate-api.com/docs   \n",
              "159      ZAR  success  https://www.exchangerate-api.com/docs   \n",
              "160      ZMW  success  https://www.exchangerate-api.com/docs   \n",
              "161      ZWL  success  https://www.exchangerate-api.com/docs   \n",
              "\n",
              "                               terms_of_use  time_last_update_unix  \\\n",
              "0    https://www.exchangerate-api.com/terms             1671062401   \n",
              "1    https://www.exchangerate-api.com/terms             1671062401   \n",
              "2    https://www.exchangerate-api.com/terms             1671062401   \n",
              "3    https://www.exchangerate-api.com/terms             1671062401   \n",
              "4    https://www.exchangerate-api.com/terms             1671062401   \n",
              "..                                      ...                    ...   \n",
              "157  https://www.exchangerate-api.com/terms             1671062401   \n",
              "158  https://www.exchangerate-api.com/terms             1671062401   \n",
              "159  https://www.exchangerate-api.com/terms             1671062401   \n",
              "160  https://www.exchangerate-api.com/terms             1671062401   \n",
              "161  https://www.exchangerate-api.com/terms             1671062401   \n",
              "\n",
              "                time_last_update_utc  time_next_update_unix  \\\n",
              "0    Thu, 15 Dec 2022 00:00:01 +0000             1671148801   \n",
              "1    Thu, 15 Dec 2022 00:00:01 +0000             1671148801   \n",
              "2    Thu, 15 Dec 2022 00:00:01 +0000             1671148801   \n",
              "3    Thu, 15 Dec 2022 00:00:01 +0000             1671148801   \n",
              "4    Thu, 15 Dec 2022 00:00:01 +0000             1671148801   \n",
              "..                               ...                    ...   \n",
              "157  Thu, 15 Dec 2022 00:00:01 +0000             1671148801   \n",
              "158  Thu, 15 Dec 2022 00:00:01 +0000             1671148801   \n",
              "159  Thu, 15 Dec 2022 00:00:01 +0000             1671148801   \n",
              "160  Thu, 15 Dec 2022 00:00:01 +0000             1671148801   \n",
              "161  Thu, 15 Dec 2022 00:00:01 +0000             1671148801   \n",
              "\n",
              "                time_next_update_utc base_code  conversion_rates  \n",
              "0    Fri, 16 Dec 2022 00:00:01 +0000       EUR            3.9145  \n",
              "1    Fri, 16 Dec 2022 00:00:01 +0000       EUR           92.1477  \n",
              "2    Fri, 16 Dec 2022 00:00:01 +0000       EUR          114.7840  \n",
              "3    Fri, 16 Dec 2022 00:00:01 +0000       EUR          420.6152  \n",
              "4    Fri, 16 Dec 2022 00:00:01 +0000       EUR            1.9079  \n",
              "..                               ...       ...               ...  \n",
              "157  Fri, 16 Dec 2022 00:00:01 +0000       EUR          119.3320  \n",
              "158  Fri, 16 Dec 2022 00:00:01 +0000       EUR          266.1988  \n",
              "159  Fri, 16 Dec 2022 00:00:01 +0000       EUR           18.3106  \n",
              "160  Fri, 16 Dec 2022 00:00:01 +0000       EUR           18.6667  \n",
              "161  Fri, 16 Dec 2022 00:00:01 +0000       EUR          713.8461  \n",
              "\n",
              "[162 rows x 10 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9caea18c-07fc-44f7-882e-6d0641c131b9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>currency</th>\n",
              "      <th>result</th>\n",
              "      <th>documentation</th>\n",
              "      <th>terms_of_use</th>\n",
              "      <th>time_last_update_unix</th>\n",
              "      <th>time_last_update_utc</th>\n",
              "      <th>time_next_update_unix</th>\n",
              "      <th>time_next_update_utc</th>\n",
              "      <th>base_code</th>\n",
              "      <th>conversion_rates</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>AED</td>\n",
              "      <td>success</td>\n",
              "      <td>https://www.exchangerate-api.com/docs</td>\n",
              "      <td>https://www.exchangerate-api.com/terms</td>\n",
              "      <td>1671062401</td>\n",
              "      <td>Thu, 15 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>1671148801</td>\n",
              "      <td>Fri, 16 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>EUR</td>\n",
              "      <td>3.9145</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AFN</td>\n",
              "      <td>success</td>\n",
              "      <td>https://www.exchangerate-api.com/docs</td>\n",
              "      <td>https://www.exchangerate-api.com/terms</td>\n",
              "      <td>1671062401</td>\n",
              "      <td>Thu, 15 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>1671148801</td>\n",
              "      <td>Fri, 16 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>EUR</td>\n",
              "      <td>92.1477</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>ALL</td>\n",
              "      <td>success</td>\n",
              "      <td>https://www.exchangerate-api.com/docs</td>\n",
              "      <td>https://www.exchangerate-api.com/terms</td>\n",
              "      <td>1671062401</td>\n",
              "      <td>Thu, 15 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>1671148801</td>\n",
              "      <td>Fri, 16 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>EUR</td>\n",
              "      <td>114.7840</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AMD</td>\n",
              "      <td>success</td>\n",
              "      <td>https://www.exchangerate-api.com/docs</td>\n",
              "      <td>https://www.exchangerate-api.com/terms</td>\n",
              "      <td>1671062401</td>\n",
              "      <td>Thu, 15 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>1671148801</td>\n",
              "      <td>Fri, 16 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>EUR</td>\n",
              "      <td>420.6152</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ANG</td>\n",
              "      <td>success</td>\n",
              "      <td>https://www.exchangerate-api.com/docs</td>\n",
              "      <td>https://www.exchangerate-api.com/terms</td>\n",
              "      <td>1671062401</td>\n",
              "      <td>Thu, 15 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>1671148801</td>\n",
              "      <td>Fri, 16 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.9079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>157</th>\n",
              "      <td>XPF</td>\n",
              "      <td>success</td>\n",
              "      <td>https://www.exchangerate-api.com/docs</td>\n",
              "      <td>https://www.exchangerate-api.com/terms</td>\n",
              "      <td>1671062401</td>\n",
              "      <td>Thu, 15 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>1671148801</td>\n",
              "      <td>Fri, 16 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>EUR</td>\n",
              "      <td>119.3320</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>158</th>\n",
              "      <td>YER</td>\n",
              "      <td>success</td>\n",
              "      <td>https://www.exchangerate-api.com/docs</td>\n",
              "      <td>https://www.exchangerate-api.com/terms</td>\n",
              "      <td>1671062401</td>\n",
              "      <td>Thu, 15 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>1671148801</td>\n",
              "      <td>Fri, 16 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>EUR</td>\n",
              "      <td>266.1988</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>159</th>\n",
              "      <td>ZAR</td>\n",
              "      <td>success</td>\n",
              "      <td>https://www.exchangerate-api.com/docs</td>\n",
              "      <td>https://www.exchangerate-api.com/terms</td>\n",
              "      <td>1671062401</td>\n",
              "      <td>Thu, 15 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>1671148801</td>\n",
              "      <td>Fri, 16 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>EUR</td>\n",
              "      <td>18.3106</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>160</th>\n",
              "      <td>ZMW</td>\n",
              "      <td>success</td>\n",
              "      <td>https://www.exchangerate-api.com/docs</td>\n",
              "      <td>https://www.exchangerate-api.com/terms</td>\n",
              "      <td>1671062401</td>\n",
              "      <td>Thu, 15 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>1671148801</td>\n",
              "      <td>Fri, 16 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>EUR</td>\n",
              "      <td>18.6667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>161</th>\n",
              "      <td>ZWL</td>\n",
              "      <td>success</td>\n",
              "      <td>https://www.exchangerate-api.com/docs</td>\n",
              "      <td>https://www.exchangerate-api.com/terms</td>\n",
              "      <td>1671062401</td>\n",
              "      <td>Thu, 15 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>1671148801</td>\n",
              "      <td>Fri, 16 Dec 2022 00:00:01 +0000</td>\n",
              "      <td>EUR</td>\n",
              "      <td>713.8461</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>162 rows Ã— 10 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9caea18c-07fc-44f7-882e-6d0641c131b9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9caea18c-07fc-44f7-882e-6d0641c131b9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9caea18c-07fc-44f7-882e-6d0641c131b9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Merge new Cost Dataframe with API call to get shop wise currency conversion rate. As we need to calculate discount in future on basis of local currency."
      ],
      "metadata": {
        "id": "nDW8ZmJO3BYI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Mergin Transaction Data with User Data\n",
        "final_content_oreder_2 = final_content_oreder.merge(data[['currency', 'conversion_rates']], left_on='Local Currency Abbreviation', right_on='currency', how='left')"
      ],
      "metadata": {
        "id": "THKlndmpcDqL"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "final_content_oreder_2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "FeCdGngKcEcy",
        "outputId": "7433ee30-9fec-4d2b-9a2d-0cb529c01f08"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          date      shop_id  advertising_costs (local currency)           ID  \\\n",
              "0   2022-02-15  12345678915                           84.500000  12345678915   \n",
              "1   2022-02-15  12345678914                         2253.188950  12345678914   \n",
              "2   2022-02-15  12345678911                        17028.923715  12345678911   \n",
              "3   2022-02-15  12345678912                          107.250000  12345678912   \n",
              "4   2022-02-15  12345678913                           87.820000  12345678913   \n",
              "..         ...          ...                                 ...          ...   \n",
              "169 2022-03-15  12345678912                           72.400000  12345678912   \n",
              "170 2022-03-15  12345678913                           86.800000  12345678913   \n",
              "171 2022-03-15  12345678914                         3204.776497  12345678914   \n",
              "172 2022-03-15  12345678910                         1523.790000  12345678910   \n",
              "173 2022-03-15  12345678915                           61.920000  12345678915   \n",
              "\n",
              "    Shop   Name   Local Currency Abbreviation currency  conversion_rates  \n",
              "0    Blumfeldt Uk                         GBP      GBP            0.8595  \n",
              "1    Blumfeldt CZ                         CZK      CZK           24.2781  \n",
              "2    Blumfeldt HU                         HUF      HUF          405.9021  \n",
              "3    Blumfeldt FR                         EUR      EUR            1.0000  \n",
              "4    Blumfeldt IT                         EUR      EUR            1.0000  \n",
              "..            ...                         ...      ...               ...  \n",
              "169  Blumfeldt FR                         EUR      EUR            1.0000  \n",
              "170  Blumfeldt IT                         EUR      EUR            1.0000  \n",
              "171  Blumfeldt CZ                         CZK      CZK           24.2781  \n",
              "172  Blumfeldt DE                         EUR      EUR            1.0000  \n",
              "173  Blumfeldt Uk                         GBP      GBP            0.8595  \n",
              "\n",
              "[174 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-741e591d-cf44-40fd-83ff-cc01bb11d352\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>shop_id</th>\n",
              "      <th>advertising_costs (local currency)</th>\n",
              "      <th>ID</th>\n",
              "      <th>Shop   Name</th>\n",
              "      <th>Local Currency Abbreviation</th>\n",
              "      <th>currency</th>\n",
              "      <th>conversion_rates</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>84.500000</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>Blumfeldt Uk</td>\n",
              "      <td>GBP</td>\n",
              "      <td>GBP</td>\n",
              "      <td>0.8595</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678914</td>\n",
              "      <td>2253.188950</td>\n",
              "      <td>12345678914</td>\n",
              "      <td>Blumfeldt CZ</td>\n",
              "      <td>CZK</td>\n",
              "      <td>CZK</td>\n",
              "      <td>24.2781</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678911</td>\n",
              "      <td>17028.923715</td>\n",
              "      <td>12345678911</td>\n",
              "      <td>Blumfeldt HU</td>\n",
              "      <td>HUF</td>\n",
              "      <td>HUF</td>\n",
              "      <td>405.9021</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678912</td>\n",
              "      <td>107.250000</td>\n",
              "      <td>12345678912</td>\n",
              "      <td>Blumfeldt FR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678913</td>\n",
              "      <td>87.820000</td>\n",
              "      <td>12345678913</td>\n",
              "      <td>Blumfeldt IT</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>169</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678912</td>\n",
              "      <td>72.400000</td>\n",
              "      <td>12345678912</td>\n",
              "      <td>Blumfeldt FR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>170</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678913</td>\n",
              "      <td>86.800000</td>\n",
              "      <td>12345678913</td>\n",
              "      <td>Blumfeldt IT</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>171</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678914</td>\n",
              "      <td>3204.776497</td>\n",
              "      <td>12345678914</td>\n",
              "      <td>Blumfeldt CZ</td>\n",
              "      <td>CZK</td>\n",
              "      <td>CZK</td>\n",
              "      <td>24.2781</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>172</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>1523.790000</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>Blumfeldt DE</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>173</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>61.920000</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>Blumfeldt Uk</td>\n",
              "      <td>GBP</td>\n",
              "      <td>GBP</td>\n",
              "      <td>0.8595</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>174 rows Ã— 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-741e591d-cf44-40fd-83ff-cc01bb11d352')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-741e591d-cf44-40fd-83ff-cc01bb11d352 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-741e591d-cf44-40fd-83ff-cc01bb11d352');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "So, our objective is to have all discounts and revenues in EUR so we have to convert all currencies to EUR. So, in case of cost EUR normalization can be done by diving **\"advertising_costs (local currency)\"** by \"**conversion_rates**\" and placing all values in new column \"**Cost_in_ads_eur**\"."
      ],
      "metadata": {
        "id": "vOVw9XqD4Vi4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "final_content_oreder_2['Cost_in_ads_eur'] = (final_content_oreder_2['advertising_costs (local currency)'] / final_content_oreder_2['conversion_rates']).round(decimals = 2)"
      ],
      "metadata": {
        "id": "wWQssIowctO-"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "final_content_oreder_2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "pMzsHetKdQDx",
        "outputId": "08d28eff-17bc-41c7-d544-64dd7e4a5806"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          date      shop_id  advertising_costs (local currency)           ID  \\\n",
              "0   2022-02-15  12345678915                           84.500000  12345678915   \n",
              "1   2022-02-15  12345678914                         2253.188950  12345678914   \n",
              "2   2022-02-15  12345678911                        17028.923715  12345678911   \n",
              "3   2022-02-15  12345678912                          107.250000  12345678912   \n",
              "4   2022-02-15  12345678913                           87.820000  12345678913   \n",
              "..         ...          ...                                 ...          ...   \n",
              "169 2022-03-15  12345678912                           72.400000  12345678912   \n",
              "170 2022-03-15  12345678913                           86.800000  12345678913   \n",
              "171 2022-03-15  12345678914                         3204.776497  12345678914   \n",
              "172 2022-03-15  12345678910                         1523.790000  12345678910   \n",
              "173 2022-03-15  12345678915                           61.920000  12345678915   \n",
              "\n",
              "    Shop   Name   Local Currency Abbreviation currency  conversion_rates  \\\n",
              "0    Blumfeldt Uk                         GBP      GBP            0.8595   \n",
              "1    Blumfeldt CZ                         CZK      CZK           24.2781   \n",
              "2    Blumfeldt HU                         HUF      HUF          405.9021   \n",
              "3    Blumfeldt FR                         EUR      EUR            1.0000   \n",
              "4    Blumfeldt IT                         EUR      EUR            1.0000   \n",
              "..            ...                         ...      ...               ...   \n",
              "169  Blumfeldt FR                         EUR      EUR            1.0000   \n",
              "170  Blumfeldt IT                         EUR      EUR            1.0000   \n",
              "171  Blumfeldt CZ                         CZK      CZK           24.2781   \n",
              "172  Blumfeldt DE                         EUR      EUR            1.0000   \n",
              "173  Blumfeldt Uk                         GBP      GBP            0.8595   \n",
              "\n",
              "     Cost_in_ads_eur  \n",
              "0              98.31  \n",
              "1              92.81  \n",
              "2              41.95  \n",
              "3             107.25  \n",
              "4              87.82  \n",
              "..               ...  \n",
              "169            72.40  \n",
              "170            86.80  \n",
              "171           132.00  \n",
              "172          1523.79  \n",
              "173            72.04  \n",
              "\n",
              "[174 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-efd89601-3d01-4788-9bd8-610ba3058917\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>shop_id</th>\n",
              "      <th>advertising_costs (local currency)</th>\n",
              "      <th>ID</th>\n",
              "      <th>Shop   Name</th>\n",
              "      <th>Local Currency Abbreviation</th>\n",
              "      <th>currency</th>\n",
              "      <th>conversion_rates</th>\n",
              "      <th>Cost_in_ads_eur</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>84.500000</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>Blumfeldt Uk</td>\n",
              "      <td>GBP</td>\n",
              "      <td>GBP</td>\n",
              "      <td>0.8595</td>\n",
              "      <td>98.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678914</td>\n",
              "      <td>2253.188950</td>\n",
              "      <td>12345678914</td>\n",
              "      <td>Blumfeldt CZ</td>\n",
              "      <td>CZK</td>\n",
              "      <td>CZK</td>\n",
              "      <td>24.2781</td>\n",
              "      <td>92.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678911</td>\n",
              "      <td>17028.923715</td>\n",
              "      <td>12345678911</td>\n",
              "      <td>Blumfeldt HU</td>\n",
              "      <td>HUF</td>\n",
              "      <td>HUF</td>\n",
              "      <td>405.9021</td>\n",
              "      <td>41.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678912</td>\n",
              "      <td>107.250000</td>\n",
              "      <td>12345678912</td>\n",
              "      <td>Blumfeldt FR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>107.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678913</td>\n",
              "      <td>87.820000</td>\n",
              "      <td>12345678913</td>\n",
              "      <td>Blumfeldt IT</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>87.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>169</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678912</td>\n",
              "      <td>72.400000</td>\n",
              "      <td>12345678912</td>\n",
              "      <td>Blumfeldt FR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>72.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>170</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678913</td>\n",
              "      <td>86.800000</td>\n",
              "      <td>12345678913</td>\n",
              "      <td>Blumfeldt IT</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>86.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>171</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678914</td>\n",
              "      <td>3204.776497</td>\n",
              "      <td>12345678914</td>\n",
              "      <td>Blumfeldt CZ</td>\n",
              "      <td>CZK</td>\n",
              "      <td>CZK</td>\n",
              "      <td>24.2781</td>\n",
              "      <td>132.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>172</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>1523.790000</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>Blumfeldt DE</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>1523.79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>173</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>61.920000</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>Blumfeldt Uk</td>\n",
              "      <td>GBP</td>\n",
              "      <td>GBP</td>\n",
              "      <td>0.8595</td>\n",
              "      <td>72.04</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>174 rows Ã— 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-efd89601-3d01-4788-9bd8-610ba3058917')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-efd89601-3d01-4788-9bd8-610ba3058917 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-efd89601-3d01-4788-9bd8-610ba3058917');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "In order dataset we have discount in EUR or LOCAL. We have to normalize all discount in EUR. So, in first set make new column and place all EUR values in it."
      ],
      "metadata": {
        "id": "FRm-l2pXBRl1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#adding new column for EUR values\n",
        "df_order_db['discount_eur'] = df_order_db.loc[df_order_db['discount_currency'] == 'EUR']['revenue_before_discount (in euro)']"
      ],
      "metadata": {
        "id": "A7CkMSBHiYJX"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "To get local curency for discount merge dataframe on basis of shop ids."
      ],
      "metadata": {
        "id": "zJ8u4E7N-GOt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Mergin Order Data with Content Data\n",
        "final_oreder_2 = df_order_db.merge(df_content_log[['ID', 'Local Currency Abbreviation']], left_on='shop_id', right_on='ID', how='left')"
      ],
      "metadata": {
        "id": "Sitdj_Y-gbAH"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Now, merge new dataframe with exchange rate data."
      ],
      "metadata": {
        "id": "R0c7DuZE-UMe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Mergin new dataframe with with Excahnge rate data\n",
        "final_oreder_3 = final_oreder_2.merge(data[['currency', 'conversion_rates']], left_on='Local Currency Abbreviation', right_on='currency', how='left')"
      ],
      "metadata": {
        "id": "DTZWnGi9kWsr"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "final_oreder_3"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 557
        },
        "id": "BntTn2iJS1gW",
        "outputId": "89dd6a2b-4100-4e77-e062-ec02c2262a43"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     order_date  year  month  day      shop_id  \\\n",
              "0    2022-03-12  2022      3   12  12345678911   \n",
              "1    2022-03-12  2022      3   12  12345678910   \n",
              "2    2022-03-12  2022      3   12  12345678910   \n",
              "3    2022-03-12  2022      3   12  12345678910   \n",
              "4    2022-03-12  2022      3   12  12345678910   \n",
              "...         ...   ...    ...  ...          ...   \n",
              "4288 2022-03-12  2022      3   12  12345678910   \n",
              "4289 2022-03-12  2022      3   12  12345678910   \n",
              "4290 2022-03-12  2022      3   12  12345678910   \n",
              "4291 2022-03-12  2022      3   12  12345678910   \n",
              "4292 2022-03-12  2022      3   12  12345678910   \n",
              "\n",
              "                           customer_id   product_category  \\\n",
              "0     gib6b8455868o123i10ob4b18c804c83         Irrigation   \n",
              "1     0cbc4660g18g08g6g6o15i151c82i6gc    Outdoor Heating   \n",
              "2     2b8i50d3ob5g5339cdoo0d79b990cgb1           Wildlife   \n",
              "3     4c8c7dggi8ic9d64b2o7ci7gob1c6590   Garden Furniture   \n",
              "4     odg58644702ib0b4g2076o70do23955c   Garden Furniture   \n",
              "...                                ...                ...   \n",
              "4288  gbiog6i604gb3606oi9963o1g3i191bd    Outdoor Heating   \n",
              "4289  bb1c66o84gic5obi5118c3g217i1i0c0  Gazebos & Awnings   \n",
              "4290  3gg699i8c47i32c1g3i82g735bb63728    Outdoor Heating   \n",
              "4291  141d778592c5b0333b34989b6052b151  Gazebos & Awnings   \n",
              "4292  8cc6obc4go3b30686ib87c55599g7g77             Living   \n",
              "\n",
              "      revenue_before_discount (in euro)  discount discount_currency  \\\n",
              "0                                 55.99       0.0               EUR   \n",
              "1                                126.04       0.0               EUR   \n",
              "2                                 55.45       0.0               EUR   \n",
              "3                                  0.00       0.0               EUR   \n",
              "4                                190.66       0.0               EUR   \n",
              "...                                 ...       ...               ...   \n",
              "4288                               0.00       0.0               EUR   \n",
              "4289                              19.32       0.0               EUR   \n",
              "4290                             168.06       0.0               EUR   \n",
              "4291                              19.16       0.0               EUR   \n",
              "4292                              33.56       0.0               EUR   \n",
              "\n",
              "      discount_eur           ID Local Currency Abbreviation currency  \\\n",
              "0              0.0  12345678911                         HUF      HUF   \n",
              "1              0.0  12345678910                         EUR      EUR   \n",
              "2              0.0  12345678910                         EUR      EUR   \n",
              "3              0.0  12345678910                         EUR      EUR   \n",
              "4              0.0  12345678910                         EUR      EUR   \n",
              "...            ...          ...                         ...      ...   \n",
              "4288           0.0  12345678910                         EUR      EUR   \n",
              "4289           0.0  12345678910                         EUR      EUR   \n",
              "4290           0.0  12345678910                         EUR      EUR   \n",
              "4291           0.0  12345678910                         EUR      EUR   \n",
              "4292           0.0  12345678910                         EUR      EUR   \n",
              "\n",
              "      conversion_rates  \n",
              "0             405.9021  \n",
              "1               1.0000  \n",
              "2               1.0000  \n",
              "3               1.0000  \n",
              "4               1.0000  \n",
              "...                ...  \n",
              "4288            1.0000  \n",
              "4289            1.0000  \n",
              "4290            1.0000  \n",
              "4291            1.0000  \n",
              "4292            1.0000  \n",
              "\n",
              "[4293 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a03f5ae4-a937-4d63-bdb9-c96da087d222\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>order_date</th>\n",
              "      <th>year</th>\n",
              "      <th>month</th>\n",
              "      <th>day</th>\n",
              "      <th>shop_id</th>\n",
              "      <th>customer_id</th>\n",
              "      <th>product_category</th>\n",
              "      <th>revenue_before_discount (in euro)</th>\n",
              "      <th>discount</th>\n",
              "      <th>discount_currency</th>\n",
              "      <th>discount_eur</th>\n",
              "      <th>ID</th>\n",
              "      <th>Local Currency Abbreviation</th>\n",
              "      <th>currency</th>\n",
              "      <th>conversion_rates</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-03-12</td>\n",
              "      <td>2022</td>\n",
              "      <td>3</td>\n",
              "      <td>12</td>\n",
              "      <td>12345678911</td>\n",
              "      <td>gib6b8455868o123i10ob4b18c804c83</td>\n",
              "      <td>Irrigation</td>\n",
              "      <td>55.99</td>\n",
              "      <td>0.0</td>\n",
              "      <td>EUR</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12345678911</td>\n",
              "      <td>HUF</td>\n",
              "      <td>HUF</td>\n",
              "      <td>405.9021</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022-03-12</td>\n",
              "      <td>2022</td>\n",
              "      <td>3</td>\n",
              "      <td>12</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>0cbc4660g18g08g6g6o15i151c82i6gc</td>\n",
              "      <td>Outdoor Heating</td>\n",
              "      <td>126.04</td>\n",
              "      <td>0.0</td>\n",
              "      <td>EUR</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-03-12</td>\n",
              "      <td>2022</td>\n",
              "      <td>3</td>\n",
              "      <td>12</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>2b8i50d3ob5g5339cdoo0d79b990cgb1</td>\n",
              "      <td>Wildlife</td>\n",
              "      <td>55.45</td>\n",
              "      <td>0.0</td>\n",
              "      <td>EUR</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-03-12</td>\n",
              "      <td>2022</td>\n",
              "      <td>3</td>\n",
              "      <td>12</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>4c8c7dggi8ic9d64b2o7ci7gob1c6590</td>\n",
              "      <td>Garden Furniture</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>EUR</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-03-12</td>\n",
              "      <td>2022</td>\n",
              "      <td>3</td>\n",
              "      <td>12</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>odg58644702ib0b4g2076o70do23955c</td>\n",
              "      <td>Garden Furniture</td>\n",
              "      <td>190.66</td>\n",
              "      <td>0.0</td>\n",
              "      <td>EUR</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4288</th>\n",
              "      <td>2022-03-12</td>\n",
              "      <td>2022</td>\n",
              "      <td>3</td>\n",
              "      <td>12</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>gbiog6i604gb3606oi9963o1g3i191bd</td>\n",
              "      <td>Outdoor Heating</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>EUR</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4289</th>\n",
              "      <td>2022-03-12</td>\n",
              "      <td>2022</td>\n",
              "      <td>3</td>\n",
              "      <td>12</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>bb1c66o84gic5obi5118c3g217i1i0c0</td>\n",
              "      <td>Gazebos &amp; Awnings</td>\n",
              "      <td>19.32</td>\n",
              "      <td>0.0</td>\n",
              "      <td>EUR</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4290</th>\n",
              "      <td>2022-03-12</td>\n",
              "      <td>2022</td>\n",
              "      <td>3</td>\n",
              "      <td>12</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>3gg699i8c47i32c1g3i82g735bb63728</td>\n",
              "      <td>Outdoor Heating</td>\n",
              "      <td>168.06</td>\n",
              "      <td>0.0</td>\n",
              "      <td>EUR</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4291</th>\n",
              "      <td>2022-03-12</td>\n",
              "      <td>2022</td>\n",
              "      <td>3</td>\n",
              "      <td>12</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>141d778592c5b0333b34989b6052b151</td>\n",
              "      <td>Gazebos &amp; Awnings</td>\n",
              "      <td>19.16</td>\n",
              "      <td>0.0</td>\n",
              "      <td>EUR</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4292</th>\n",
              "      <td>2022-03-12</td>\n",
              "      <td>2022</td>\n",
              "      <td>3</td>\n",
              "      <td>12</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>8cc6obc4go3b30686ib87c55599g7g77</td>\n",
              "      <td>Living</td>\n",
              "      <td>33.56</td>\n",
              "      <td>0.0</td>\n",
              "      <td>EUR</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>EUR</td>\n",
              "      <td>EUR</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4293 rows Ã— 15 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a03f5ae4-a937-4d63-bdb9-c96da087d222')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a03f5ae4-a937-4d63-bdb9-c96da087d222 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a03f5ae4-a937-4d63-bdb9-c96da087d222');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "To normalize discount currency we have to check whether discount currency is EUR or Local in case of EUR we will use same EUR value and in case of LOCAL we convert by dividing current value by conversion rate value. And done in the loop "
      ],
      "metadata": {
        "id": "hysRibHo-gfG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# iterating over rows using iterrows() function\n",
        "for index, row in final_oreder_3.iterrows():\n",
        " if row['discount_currency'] == 'EUR':\n",
        "    # update the row in the dataframe\n",
        "    final_oreder_3['discount_eur'].at[index] = final_oreder_3['discount'].at[index]\n",
        " elif row['discount_currency'] == 'LOCAL':\n",
        "   final_oreder_3['discount_eur'].at[index] = (final_oreder_3['discount'].at[index]/final_oreder_3['conversion_rates'].at[index]).round(decimals = 2)"
      ],
      "metadata": {
        "id": "zt_YBzk_lvC0"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Now, we have to get cost of add rate in the table."
      ],
      "metadata": {
        "id": "UCq63l-2_F5D"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Mergin New Dataframe with cost Dataframe\n",
        "final_content_oreder_final = final_oreder_3.merge(final_content_oreder_2[['date', 'shop_id', 'Shop   Name  ', 'currency', 'Cost_in_ads_eur']], left_on=['order_date', 'shop_id'], right_on=['date', 'shop_id'], how='left')"
      ],
      "metadata": {
        "id": "lZ093uneXqeE"
      },
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#rename the Shop name\n",
        "final_content_oreder_final = final_content_oreder_final.rename(columns = {'Shop   Name  ':'Shop_Name'})"
      ],
      "metadata": {
        "id": "1MqEpWY3dXQO"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "To get country code \"UK, DE\" split Shop_Name to two columns "
      ],
      "metadata": {
        "id": "EjjGu5fgECVB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Split single column into two columns use ',' delimiter\n",
        "final_content_oreder_final[['First_Shop_Name', 'Last_Shop_Name']] = final_content_oreder_final.Shop_Name.str.split(\" \", expand = True)"
      ],
      "metadata": {
        "id": "Vx29PL1NbJiF"
      },
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Calculating each transaction by adding discount value because all discount are in nagative so will add them will do work."
      ],
      "metadata": {
        "id": "vb7Oxze5Eso8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#calculating each transaction by adding discount value \n",
        "final_content_oreder_final['t_revenue'] = final_content_oreder_final['revenue_before_discount (in euro)'] + final_content_oreder_final['discount_eur']"
      ],
      "metadata": {
        "id": "R5sJD1e1cv5U"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "My understanding is that total revenue mean have to calculte revenue of a shop in provided period so for that have to group by shop ID and calculate sum. And to calculate Revenue Share we have to do same but this time group by product category and Shop id then sum of revelue after discount and first calculate total revenue each shop category."
      ],
      "metadata": {
        "id": "crQSwXlFFBlF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#calculating Total revenue\n",
        "NEW_AGG_REV_total = final_content_oreder_final.groupby(['ID']).agg(Total_revenue_shop = (\"t_revenue\",\"sum\"))\n",
        "#calculating calculate total revenue each shop category \n",
        "NEW_AGG_REV_per_shop  = final_content_oreder_final.groupby(['product_category','ID']).agg(Total_revenue_shop_cat = (\"t_revenue\",\"sum\"))"
      ],
      "metadata": {
        "id": "lM6wmmOSfLjZ"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#calculating Total revenue\n",
        "NEW_AGG_REV_total_PER_DAY = final_content_oreder_final.groupby(['ID','date']).agg(Total_revenue_shop_total_PER_DAY = (\"t_revenue\",\"sum\"))"
      ],
      "metadata": {
        "id": "iZestDplIAjr"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "NEW_AGG_REV_total_PER_DAY"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "gU537fzmIZNI",
        "outputId": "95b4eefa-eeb3-4d98-a6a1-61e8b0f1b40a"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                        Total_revenue_shop_total_PER_DAY\n",
              "ID          date                                        \n",
              "12345678910 2022-02-15                           5423.19\n",
              "            2022-02-16                           7187.42\n",
              "            2022-02-17                           3585.16\n",
              "            2022-02-18                           5477.63\n",
              "            2022-02-19                           7350.07\n",
              "...                                                  ...\n",
              "12345678915 2022-03-11                            512.76\n",
              "            2022-03-12                           1433.20\n",
              "            2022-03-13                           1245.59\n",
              "            2022-03-14                           2309.61\n",
              "            2022-03-15                            560.26\n",
              "\n",
              "[169 rows x 1 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-08aa8125-fc8e-4ef7-ac77-32b0d60de303\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Total_revenue_shop_total_PER_DAY</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ID</th>\n",
              "      <th>date</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">12345678910</th>\n",
              "      <th>2022-02-15</th>\n",
              "      <td>5423.19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-16</th>\n",
              "      <td>7187.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-17</th>\n",
              "      <td>3585.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-18</th>\n",
              "      <td>5477.63</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-19</th>\n",
              "      <td>7350.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">12345678915</th>\n",
              "      <th>2022-03-11</th>\n",
              "      <td>512.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-12</th>\n",
              "      <td>1433.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-13</th>\n",
              "      <td>1245.59</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-14</th>\n",
              "      <td>2309.61</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-15</th>\n",
              "      <td>560.26</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>169 rows Ã— 1 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-08aa8125-fc8e-4ef7-ac77-32b0d60de303')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-08aa8125-fc8e-4ef7-ac77-32b0d60de303 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-08aa8125-fc8e-4ef7-ac77-32b0d60de303');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#replacing index as column\n",
        "NEW_AGG_REV_total.reset_index(inplace=True)\n",
        "#rename index column\n",
        "NEW_AGG_REV_total = NEW_AGG_REV_total.rename(columns = {'index':'ID'})\n",
        "#replacing index as column\n",
        "NEW_AGG_REV_per_shop.reset_index(inplace=True)\n",
        "#rename index column\n",
        "NEW_AGG_REV_per_shop = NEW_AGG_REV_per_shop.rename(columns = {'index':'ID'})\n",
        "#replacing index as column\n",
        "NEW_AGG_REV_total_PER_DAY.reset_index(inplace=True)\n",
        "#rename index column\n",
        "NEW_AGG_REV_total_PER_DAY = NEW_AGG_REV_total_PER_DAY.rename(columns = {'index':'ID'})"
      ],
      "metadata": {
        "id": "pLcReDjVwgB-"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#merge Total revenue with new Dataframe\n",
        "final_oreder_new = final_content_oreder_final.merge(NEW_AGG_REV_total, left_on='ID', right_on='ID', how='left')\n",
        "final_oreder_new = final_oreder_new.merge(NEW_AGG_REV_per_shop, left_on=['ID','product_category'], right_on=['ID','product_category'], how='left')\n",
        "final_oreder_new = final_oreder_new.merge(NEW_AGG_REV_total_PER_DAY, left_on=['shop_id','date'], right_on=['ID','date'], how='left')"
      ],
      "metadata": {
        "id": "pyzw2osvyxCk"
      },
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Calculating Cost-revenue Ratio by simple deving cost for adversiment by Total Revenue generated by shop each day "
      ],
      "metadata": {
        "id": "cgo_QnxOHZym"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "final_oreder_new['CRR'] = ((final_oreder_new['Cost_in_ads_eur']/final_oreder_new['Total_revenue_shop_total_PER_DAY'])*100).round(decimals = 2)"
      ],
      "metadata": {
        "id": "0Hf-vvyj53xW"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Calculate revenue share by dividing total revenue created by each shop per category by each category by total revenue of the shop"
      ],
      "metadata": {
        "id": "Z54VJUQIJ4Df"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "final_oreder_new['Revenue_Share'] =((final_oreder_new['Total_revenue_shop_cat']/final_oreder_new['Total_revenue_shop'])*100).round(decimals = 2)"
      ],
      "metadata": {
        "id": "lukgmVjNgfU_"
      },
      "execution_count": 34,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Adding country indication"
      ],
      "metadata": {
        "id": "8pW6i8bwKdKL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#final_oreder_new['Total_Revenue'] = final_oreder_new[\"Total_revenue_shop\"].astype(str) + ' ' + final_oreder_new[\"Last_Shop_Name\"]\n",
        "final_oreder_new['Total_Revenue'] = final_oreder_new[\"Total_revenue_shop\"]\n"
      ],
      "metadata": {
        "id": "F2zoSF4o-JJa"
      },
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#getting required columns\n",
        "google_sheet_result = final_oreder_new[['order_date','shop_id','product_category','conversion_rates','Total_Revenue','Revenue_Share','CRR', 'Last_Shop_Name']]"
      ],
      "metadata": {
        "id": "ZEF3WOIL__dB"
      },
      "execution_count": 36,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "google_sheet_result = google_sheet_result.rename(columns = {'Last_Shop_Name':'country'})"
      ],
      "metadata": {
        "id": "3Qw00GhRLW8x"
      },
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#sorting data for more understanding\n",
        "google_sheet_result = google_sheet_result.sort_values(by=['order_date','shop_id'], ascending=False)"
      ],
      "metadata": {
        "id": "v5DOQt-p-cDC"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "google_sheet_result"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "iaExaF-UBlJB",
        "outputId": "6cc3472a-100f-45a3-cf09-ca1cd046f8e8"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     order_date      shop_id  product_category  conversion_rates  \\\n",
              "632  2022-03-15  12345678915   Outdoor Heating            0.8595   \n",
              "714  2022-03-15  12345678915         Gardening            0.8595   \n",
              "723  2022-03-15  12345678915  Garden Fountains            0.8595   \n",
              "758  2022-03-15  12345678915   Outdoor Heating            0.8595   \n",
              "635  2022-03-15  12345678914            Living           24.2781   \n",
              "...         ...          ...               ...               ...   \n",
              "1121 2022-02-15  12345678910  Garden Furniture            1.0000   \n",
              "1122 2022-02-15  12345678910   Outdoor Heating            1.0000   \n",
              "1123 2022-02-15  12345678910   Outdoor Heating            1.0000   \n",
              "1124 2022-02-15  12345678910           Unknown            1.0000   \n",
              "1125 2022-02-15  12345678910   Outdoor Heating            1.0000   \n",
              "\n",
              "      Total_Revenue  Revenue_Share    CRR country  \n",
              "632        30454.05          20.29  12.86      Uk  \n",
              "714        30454.05          12.86  12.86      Uk  \n",
              "723        30454.05           8.42  12.86      Uk  \n",
              "758        30454.05          20.29  12.86      Uk  \n",
              "635        39423.51           4.33  18.29      CZ  \n",
              "...             ...            ...    ...     ...  \n",
              "1121      426356.10          35.07  36.07      DE  \n",
              "1122      426356.10          28.09  36.07      DE  \n",
              "1123      426356.10          28.09  36.07      DE  \n",
              "1124      426356.10           0.38  36.07      DE  \n",
              "1125      426356.10          28.09  36.07      DE  \n",
              "\n",
              "[4293 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0f90d303-9a9d-42ef-9a25-3f9840d7b34c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>order_date</th>\n",
              "      <th>shop_id</th>\n",
              "      <th>product_category</th>\n",
              "      <th>conversion_rates</th>\n",
              "      <th>Total_Revenue</th>\n",
              "      <th>Revenue_Share</th>\n",
              "      <th>CRR</th>\n",
              "      <th>country</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>632</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>Outdoor Heating</td>\n",
              "      <td>0.8595</td>\n",
              "      <td>30454.05</td>\n",
              "      <td>20.29</td>\n",
              "      <td>12.86</td>\n",
              "      <td>Uk</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>714</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>Gardening</td>\n",
              "      <td>0.8595</td>\n",
              "      <td>30454.05</td>\n",
              "      <td>12.86</td>\n",
              "      <td>12.86</td>\n",
              "      <td>Uk</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>723</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>Garden Fountains</td>\n",
              "      <td>0.8595</td>\n",
              "      <td>30454.05</td>\n",
              "      <td>8.42</td>\n",
              "      <td>12.86</td>\n",
              "      <td>Uk</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>758</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>Outdoor Heating</td>\n",
              "      <td>0.8595</td>\n",
              "      <td>30454.05</td>\n",
              "      <td>20.29</td>\n",
              "      <td>12.86</td>\n",
              "      <td>Uk</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>635</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678914</td>\n",
              "      <td>Living</td>\n",
              "      <td>24.2781</td>\n",
              "      <td>39423.51</td>\n",
              "      <td>4.33</td>\n",
              "      <td>18.29</td>\n",
              "      <td>CZ</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1121</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>Garden Furniture</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>426356.10</td>\n",
              "      <td>35.07</td>\n",
              "      <td>36.07</td>\n",
              "      <td>DE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1122</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>Outdoor Heating</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>426356.10</td>\n",
              "      <td>28.09</td>\n",
              "      <td>36.07</td>\n",
              "      <td>DE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1123</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>Outdoor Heating</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>426356.10</td>\n",
              "      <td>28.09</td>\n",
              "      <td>36.07</td>\n",
              "      <td>DE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1124</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>426356.10</td>\n",
              "      <td>0.38</td>\n",
              "      <td>36.07</td>\n",
              "      <td>DE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1125</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>Outdoor Heating</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>426356.10</td>\n",
              "      <td>28.09</td>\n",
              "      <td>36.07</td>\n",
              "      <td>DE</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4293 rows Ã— 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f90d303-9a9d-42ef-9a25-3f9840d7b34c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0f90d303-9a9d-42ef-9a25-3f9840d7b34c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0f90d303-9a9d-42ef-9a25-3f9840d7b34c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "google_sheet_result = google_sheet_result.drop_duplicates()"
      ],
      "metadata": {
        "id": "Cg3XFZKPg7Bz"
      },
      "execution_count": 40,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!pip3 install gspread\n",
        "!pip3 install --upgrade google-api-python-client oauth2client "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 939
        },
        "id": "mCse3K0LXBmD",
        "outputId": "f8117038-dadf-4703-a428-2888714badd0"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: gspread in /usr/local/lib/python3.8/dist-packages (3.4.2)\n",
            "Requirement already satisfied: requests>=2.2.1 in /usr/local/lib/python3.8/dist-packages (from gspread) (2.23.0)\n",
            "Requirement already satisfied: google-auth in /usr/local/lib/python3.8/dist-packages (from gspread) (2.15.0)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.8/dist-packages (from requests>=2.2.1->gspread) (3.0.4)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.8/dist-packages (from requests>=2.2.1->gspread) (1.24.3)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.8/dist-packages (from requests>=2.2.1->gspread) (2.10)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.8/dist-packages (from requests>=2.2.1->gspread) (2022.9.24)\n",
            "Requirement already satisfied: six>=1.9.0 in /usr/local/lib/python3.8/dist-packages (from google-auth->gspread) (1.15.0)\n",
            "Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.8/dist-packages (from google-auth->gspread) (5.2.0)\n",
            "Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.8/dist-packages (from google-auth->gspread) (4.9)\n",
            "Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.8/dist-packages (from google-auth->gspread) (0.2.8)\n",
            "Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.8/dist-packages (from pyasn1-modules>=0.2.1->google-auth->gspread) (0.4.8)\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: google-api-python-client in /usr/local/lib/python3.8/dist-packages (1.12.11)\n",
            "Collecting google-api-python-client\n",
            "  Downloading google_api_python_client-2.70.0-py2.py3-none-any.whl (10.7 MB)\n",
            "\u001b[K     |â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 10.7 MB 2.6 MB/s \n",
            "\u001b[?25hRequirement already satisfied: oauth2client in /usr/local/lib/python3.8/dist-packages (4.1.3)\n",
            "Requirement already satisfied: uritemplate<5,>=3.0.1 in /usr/local/lib/python3.8/dist-packages (from google-api-python-client) (3.0.1)\n",
            "Requirement already satisfied: httplib2<1dev,>=0.15.0 in /usr/local/lib/python3.8/dist-packages (from google-api-python-client) (0.17.4)\n",
            "Collecting google-auth-httplib2>=0.1.0\n",
            "  Downloading google_auth_httplib2-0.1.0-py2.py3-none-any.whl (9.3 kB)\n",
            "Requirement already satisfied: google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0dev,>=1.31.5 in /usr/local/lib/python3.8/dist-packages (from google-api-python-client) (2.8.2)\n",
            "Requirement already satisfied: google-auth<3.0.0dev,>=1.19.0 in /usr/local/lib/python3.8/dist-packages (from google-api-python-client) (2.15.0)\n",
            "Requirement already satisfied: requests<3.0.0dev,>=2.18.0 in /usr/local/lib/python3.8/dist-packages (from google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0dev,>=1.31.5->google-api-python-client) (2.23.0)\n",
            "Requirement already satisfied: protobuf<5.0.0dev,>=3.15.0 in /usr/local/lib/python3.8/dist-packages (from google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0dev,>=1.31.5->google-api-python-client) (3.19.6)\n",
            "Requirement already satisfied: googleapis-common-protos<2.0dev,>=1.56.2 in /usr/local/lib/python3.8/dist-packages (from google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0dev,>=1.31.5->google-api-python-client) (1.57.0)\n",
            "Requirement already satisfied: six>=1.9.0 in /usr/local/lib/python3.8/dist-packages (from google-auth<3.0.0dev,>=1.19.0->google-api-python-client) (1.15.0)\n",
            "Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.8/dist-packages (from google-auth<3.0.0dev,>=1.19.0->google-api-python-client) (0.2.8)\n",
            "Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.8/dist-packages (from google-auth<3.0.0dev,>=1.19.0->google-api-python-client) (4.9)\n",
            "Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.8/dist-packages (from google-auth<3.0.0dev,>=1.19.0->google-api-python-client) (5.2.0)\n",
            "Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.8/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3.0.0dev,>=1.19.0->google-api-python-client) (0.4.8)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.8/dist-packages (from requests<3.0.0dev,>=2.18.0->google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0dev,>=1.31.5->google-api-python-client) (1.24.3)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.8/dist-packages (from requests<3.0.0dev,>=2.18.0->google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0dev,>=1.31.5->google-api-python-client) (2.10)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.8/dist-packages (from requests<3.0.0dev,>=2.18.0->google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0dev,>=1.31.5->google-api-python-client) (3.0.4)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.8/dist-packages (from requests<3.0.0dev,>=2.18.0->google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0dev,>=1.31.5->google-api-python-client) (2022.9.24)\n",
            "Installing collected packages: google-auth-httplib2, google-api-python-client\n",
            "  Attempting uninstall: google-auth-httplib2\n",
            "    Found existing installation: google-auth-httplib2 0.0.4\n",
            "    Uninstalling google-auth-httplib2-0.0.4:\n",
            "      Successfully uninstalled google-auth-httplib2-0.0.4\n",
            "  Attempting uninstall: google-api-python-client\n",
            "    Found existing installation: google-api-python-client 1.12.11\n",
            "    Uninstalling google-api-python-client-1.12.11:\n",
            "      Successfully uninstalled google-api-python-client-1.12.11\n",
            "Successfully installed google-api-python-client-2.70.0 google-auth-httplib2-0.1.0\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.colab-display-data+json": {
              "pip_warning": {
                "packages": [
                  "apiclient",
                  "google_auth_httplib2",
                  "googleapiclient"
                ]
              }
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "scopes = ['https://www.googleapis.com/auth/spreadsheets',\n",
        "          'https://www.googleapis.com/auth/drive']\n",
        "\n",
        "credentials = Credentials.from_service_account_file('/content/stellar-mercury-260512-78de6bfa8cad.json', scopes=scopes)\n",
        "\n",
        "gc = gspread.authorize(credentials)"
      ],
      "metadata": {
        "id": "5j8MpvIYWfnD"
      },
      "execution_count": 42,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gauth = GoogleAuth()\n",
        "drive = GoogleDrive(gauth)\n",
        "\n",
        "# open a google sheet\n",
        "gs = gc.open_by_key('1AjRRYWCmWQM1J9UHhql5gcbXyKAJ1NY6ziY6qerXSE4')\n",
        "# select a work sheet from its name\n",
        "worksheet1 = gs.worksheet('KPI')"
      ],
      "metadata": {
        "id": "CN2bL0bic5lt"
      },
      "execution_count": 43,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# dataframe (create or import it)\n",
        "worksheet1.clear()\n",
        "set_with_dataframe(worksheet=worksheet1, dataframe=google_sheet_result, include_index=False,\n",
        "include_column_header=True, resize=True)"
      ],
      "metadata": {
        "id": "bxN9Xvt3c8GF"
      },
      "execution_count": 44,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "google_sheet_result"
      ],
      "metadata": {
        "id": "yXGpoElcfLRz",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "67e12b5b-e9e6-4a5d-c627-ea306fbf9e14"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     order_date      shop_id   product_category  conversion_rates  \\\n",
              "632  2022-03-15  12345678915    Outdoor Heating            0.8595   \n",
              "714  2022-03-15  12345678915          Gardening            0.8595   \n",
              "723  2022-03-15  12345678915   Garden Fountains            0.8595   \n",
              "635  2022-03-15  12345678914             Living           24.2781   \n",
              "636  2022-03-15  12345678914         Irrigation           24.2781   \n",
              "...         ...          ...                ...               ...   \n",
              "1024 2022-02-15  12345678910             Living            1.0000   \n",
              "1035 2022-02-15  12345678910  Gazebos & Awnings            1.0000   \n",
              "1048 2022-02-15  12345678910   Garden Fountains            1.0000   \n",
              "1049 2022-02-15  12345678910          Gardening            1.0000   \n",
              "1124 2022-02-15  12345678910            Unknown            1.0000   \n",
              "\n",
              "      Total_Revenue  Revenue_Share    CRR country  \n",
              "632        30454.05          20.29  12.86      Uk  \n",
              "714        30454.05          12.86  12.86      Uk  \n",
              "723        30454.05           8.42  12.86      Uk  \n",
              "635        39423.51           4.33  18.29      CZ  \n",
              "636        39423.51           2.96  18.29      CZ  \n",
              "...             ...            ...    ...     ...  \n",
              "1024      426356.10           0.95  36.07      DE  \n",
              "1035      426356.10          23.40  36.07      DE  \n",
              "1048      426356.10           3.20  36.07      DE  \n",
              "1049      426356.10           6.79  36.07      DE  \n",
              "1124      426356.10           0.38  36.07      DE  \n",
              "\n",
              "[772 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7dfb97a4-33e2-4083-926d-6acf53725cd4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>order_date</th>\n",
              "      <th>shop_id</th>\n",
              "      <th>product_category</th>\n",
              "      <th>conversion_rates</th>\n",
              "      <th>Total_Revenue</th>\n",
              "      <th>Revenue_Share</th>\n",
              "      <th>CRR</th>\n",
              "      <th>country</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>632</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>Outdoor Heating</td>\n",
              "      <td>0.8595</td>\n",
              "      <td>30454.05</td>\n",
              "      <td>20.29</td>\n",
              "      <td>12.86</td>\n",
              "      <td>Uk</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>714</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>Gardening</td>\n",
              "      <td>0.8595</td>\n",
              "      <td>30454.05</td>\n",
              "      <td>12.86</td>\n",
              "      <td>12.86</td>\n",
              "      <td>Uk</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>723</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678915</td>\n",
              "      <td>Garden Fountains</td>\n",
              "      <td>0.8595</td>\n",
              "      <td>30454.05</td>\n",
              "      <td>8.42</td>\n",
              "      <td>12.86</td>\n",
              "      <td>Uk</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>635</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678914</td>\n",
              "      <td>Living</td>\n",
              "      <td>24.2781</td>\n",
              "      <td>39423.51</td>\n",
              "      <td>4.33</td>\n",
              "      <td>18.29</td>\n",
              "      <td>CZ</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>636</th>\n",
              "      <td>2022-03-15</td>\n",
              "      <td>12345678914</td>\n",
              "      <td>Irrigation</td>\n",
              "      <td>24.2781</td>\n",
              "      <td>39423.51</td>\n",
              "      <td>2.96</td>\n",
              "      <td>18.29</td>\n",
              "      <td>CZ</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1024</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>Living</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>426356.10</td>\n",
              "      <td>0.95</td>\n",
              "      <td>36.07</td>\n",
              "      <td>DE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1035</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>Gazebos &amp; Awnings</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>426356.10</td>\n",
              "      <td>23.40</td>\n",
              "      <td>36.07</td>\n",
              "      <td>DE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1048</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>Garden Fountains</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>426356.10</td>\n",
              "      <td>3.20</td>\n",
              "      <td>36.07</td>\n",
              "      <td>DE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1049</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>Gardening</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>426356.10</td>\n",
              "      <td>6.79</td>\n",
              "      <td>36.07</td>\n",
              "      <td>DE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1124</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>12345678910</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>1.0000</td>\n",
              "      <td>426356.10</td>\n",
              "      <td>0.38</td>\n",
              "      <td>36.07</td>\n",
              "      <td>DE</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>772 rows Ã— 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7dfb97a4-33e2-4083-926d-6acf53725cd4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7dfb97a4-33e2-4083-926d-6acf53725cd4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7dfb97a4-33e2-4083-926d-6acf53725cd4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "vCrImFG9A3wP"
      },
      "execution_count": 45,
      "outputs": []
    }
  ]
}